#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include <time.h>

//Declaração das funções
void createID(int *id);
void cadastraUser(int *criaId, char *criaNome[][100], char *criaEmail[][100], char *criaSexo[][10], char *criaEndereco[][100], double *criaAltura, bool *criaVacina, int *criaIdade);
void pegaID(int *criaID);
void pegaNome(char *criaNome);
void pegaIdade(int *criaIdade);
void pegaSexo(char *criaSexo);
void pegaAltura(int *criaAltura);
void pegaEndereco(char *criaEndereco);
void pegaVacina(bool *criaVacina);
void pegaEmail(char *criaEmail);
void printUser(int *buscaID, int *printId,char *printNome[][100], char *printEmail[][1000], char *printSexo[][100], char *printEndereco[][100], double *printAltura, bool *printVacina, int *printIdade);

int quantUser = 0;
//Término de declaração de variáveis

//Criação das funções
int main(){
    int ID[1000], escolha, idade[1000];
    char nome[1000][100], sexo[1000][10], endereco[1000][100], email[1000][100];
    float altura[1000];//Entre 1m a 2m
    bool vacinaUser[1000];

    printf("Bem vindo ao menu\nEscolha a opcao que deseja");
    printf("Digite 1 - Caso queira registrar novos usuarios\nDigite 2 - Caso queira excluir algum usuario\nDigite 3 - Caso queira procurar um usuario\nDigite 4 - Caso queira editar os dados de algum usuario\nDigite 5 - Caso queira restaurar algum usuario\nDigite 6 - Caso queira encerrar a sessao");
    scanf("%d", &escolha);

    do{
        switch (escolha){
            case 1:
                cadastraUser(ID, nome, email, sexo, endereco, altura, vacinaUser, idade);
                break;
            case 2:
                excludeUser();
                break;
            case 3:
                buscaUser();
                break;
            case 4:
                menuEditUser();
                break;
            case 5:
                menuBachup();
                break;
            case 6:
                encerra();
                break;

            default:
                printf("Opcao invalida\nTente novamente");
                break;
        }

        printf("Opcao invalida");
        system("pause");
        printf("\33[H\33[2J"); 
    } while (escolha < 1 || escolha > 6);

    return 0;
}

void menuBackup(){

    do{
        do{
            printf("\33[H\33[2J");
            printf("1-Criar Backup\n");
            printf("2-recuperar Backup\n");
            printf("3-Voltar\n");
            printf("Digite um opcao: ");
            scanf("%d", &backupOption);
        } while (backupOption < 1 || backupOption > 3);

        if (backupOption == 1){
            printf("backup realizado com sucesso!!!\n");
            system("pause");
            backup();
        }

        else if (backupOption == 2){
            printf("backup restaurado com sucesso!!!\n");
            system("pause");
            backupUser();
            /*validaBackup != 1*/
        }

        else if (backupOption == 2 /*&& validaBackup != 1*/){
            printf("Nao tem backup salvo!\n");
        }

        else if (backupOption != 3){
            printf("\33[H\33[2J");
            printf("Opcao invalida!! digite novamente");
            system("pause");
        }
    } while (backupOption != 3);
}

void cadastraUser(int *criaId,char *criaNome[], char *criaEmail[][1000], char *criaSexo[][100], char *criaEndereco[][100], double *criaAltura, bool *criaVacina, int *criaIdade){//Cadastrar o usuário 
    int escolha;

    do{
        printf("\33[H\33[2J"); 
        printf("Cadastro de usuario"); 

        pegaNome(criaNome);
        pegaEmail(criaEmail);
        pegaidade(criaIdade);
        pegaAltura(criaAltura);
        pegaSexo(criaSexo);
        pegaVacina(criaVacina);
        pegaEndereco(criaEndereco);
        pegaID(criaId);

        printUser(buscaID, printId, printNome, printEmail, printSexo, printEndereco, printAltura, printVacina, printIdade);
        printf("\33[H\33[2J"); 

        quantUser++;

        do{
            printf("Deseja cadastrar mais alguem? 5-sim, 0-nao");
            scanf("%d",&escolha);
        } while (escolha != 5 || escolha !=0);
    } while (escolha != 0);
}

void pegaID(int *criaID){//criar o ID randômicamente
    srand(time(NULL));
    criaID[quantUser] = (rand() % (999999 - 100000 + 100000) + 100000);
    for (int i = 0; i < quantUser; i++){
        if (criaID[quantUser] == criaID[i]){
            criaID[quantUser] = (rand() % (999999 - 100000 + 100000) + 100000);
            i = 0;
        }
    }
}

void pegaNome(char *criaNome){
    do{
        printf("Qual o nome do usuário?");
        fflush(stdin);
        fgets(criaNome[quantUser], 100, stdin);
    } while (strlen(criaNome[quantUser] < 2));
}

void pegaIdade(int *criaIdade){
    do{
        printf("Qual a idade do usuário?");
        scanf("%d", &criaIdade[quantUser]);
    } while (criaIdade[quantUser] > 0 && criaIdade[quantUser] < 100);
}

void pegaSexo(char *criaSexo){
    int i = 1;
    do{
        printf("Qual o sexo do usuário? Homem, Mulher ou NDA");
        fflush(stdin);
        fgets(criaSexo[quantUser], 10, stdin);

        if (stricmp(criaSexo[quantUser], "NDA\n") == 0 || stricmp(criaSexo[quantUser], "Mulher\n") == 0 || stricmp(criaSexo[quantUser], "Homem\n") == 0){
            i = 0;
        }
    } while (i == 1);
    
}

void pegaAltura(int *criaAltura){
    do{
        printf("Qual a altura do usuario?");
        scanf("%lf", &criaAltura[quantUser]);
    } while (criaAltura[quantUser] < 1 || criaAltura[quantUser] > 2);
}

void pegaEndereco(char *criaEndereco){
    do{
        printf("Qual o endereco do usuário?")
        fflush(stdin);
        fgets(criaEndereco[quantUser], 100, stdin);
    } while (strlen(criaEndereco[quantUser] < 2));
}

void pegaVacina(bool *criaVacina){
    char pergVacina[10];
    int i = 0;

    do
    {
        printf("Usuario vacinado? Sim ou nao");
        fflush(stdin);
        fgets(criaVacina[quantUser], 10, stdin);

        if (stricmp(pergVacina, "sim\n" == 0)){
            criaVacina[quantUser] = true;
            i = 1;
        }
        else if(stricmp(pergVacina, "nao\n" == 0)){
            criaVacina[quantUser] = false;
            i = 1;
        }
    } while (i != 1);
}

void pegaEmail(char *criaEmail){
    do
    {
        printf("Qual o email do usuario?");
        fflush(stdin);
        fgets(criaEmail[quantUser], 100, stdin);
    } while (strchr(criaEmail[quantUser], '@') == NULL);
}

void excludeUser(int *excludeID, char *excludeNome[][100], char *excludeEmail[][100], char *excludeSexo[][100], char *excludeEndereco[][100], double *excludeAltura, bool *excludeVacina, int *excludeIdade){//Excluir os dados do usuário
    int escolha = 0, posUser = 0, option = 0;
    int j;

    j = quantUser;

    do{
        do{
            printf("buscar usuario:\n");
            printf("1-por ID\n");
            printf("2-por Email\n");
            printf("3-volta\n");
            printf("Digite uma opcao valida: ");
            scanf("%d", &escolha);
        } while (escolha > 3 || escolha < 1);
        switch escolha {
            case 1 :
                posUser = buscaID(excludeID, excludeNome, excludeEmail, excludeSexo, excludeEndereco, excludeAltura, excludeVacina, excludeIdade);
                break;
            case 2 :
                posUser = buscaEmail(excludeID, excludeNome, excludeEmail, excludeSexo, excludeEndereco, excludeAltura, excludeVacina, excludeIdade);
                break;
            case 3 :
                return;
                break;
        }

        for (int j = 1; j != quantUser; j++){
            for (posUser = 0; posUser != j; posUser++){
                excludeId[posUser] = excludeId[j];
                excludeAltura[posUser] = excludeAltura[j];
                excludeVacina[posUser] = excludeVacina[j];
                strcpy(excludeNome[posUser], excludeNome[j]);
                strcpy(excludeEmail[posUser], excludeEmail[j]);
                strcpy(excludeSexo[posUser], excludeSexo[j]);
                strcpy(excludeEndereco[posUser], excludeEndereco[j]);
            }
        }
        quantUser--;

        do{
            printf("\33[H\33[2J"); 
            printf("deseja edita outro usuario(1-sim 2-nao):");
            scanf("%d", &option);
        } while (option < 1 || option > 2);
    } while (option == 1);
}

void editUser(){

    do{
        printf("\33[H\33[2J");

        printf("_________________Editar___________________\n");

        do{
            printf("Buscar usuario:\n");
            printf("1-Por ID\n");
            printf("2-Por Email\n");
            printf("3-Voltar\n");
            printf("Digite uma opcao valida:");
            scanf("%d", &option);
        } while (option < 1 || option > 3);

        if (option == 1){
            userCount = buscarId();
        }

        else if (option == 2){
            userCount = buscarEmail();
        }

        else{
            return;
        }

        do{
            printf("\33[H\33[2J");
            printf("1-Nome\n");
            printf("2-Email\n");
            printf("3-Sexo\n");
            printf("4-Endereco\n");
            printf("5-Altura\n");
            printf("6-Vacina\n");
            printf("7-Volta\n");
            printf("Digite a opcao que deseja alterar:");
            scanf("%d", &option);

        } while (option < 1 || option > 7);

        if (option == 1){
            nome(editarNome, userCount);
        }

        else if (option == 2){
            email(editarEmail, userCount);
        }

        else if (option == 3){
            sexo(editarSexo, userCount);
        }

        else if (option == 4){
            endereco(editarEndereco, userCount);
        }

        else if (option == 5){
            altura(editarAltura, userCount);
        }

        else if (option == 6){
            vacina(editarVacina, userCount);
        }

        else{
            return;
        }

        printUser();

        do{
            printf("\33[H\33[2J");
            printf("Deseja editar outro usuario? 1-sim   2-nao");
            scanf("%d", &option);
        } while (option < 1 || option > 2);
    } while (option == 1);

}

void printUser(int *buscaID, int *printId, char *printNome[], char *printEmail[][1000], char *printSexo[][100], char *printEndereco[][100], double *printAltura, bool *printVacina, int *printIdade){//Printar na tela limpa os dados do usuário
    printf("\33[H\33[2J");
    printf("_______________________________________________\n");
    printf("O ID do usuario: %d\n", printId[buscaID]);
    printf("O nome do usuario: %s\n", printNome[buscaID]);
    printf("O email do usuario: %s\n", printEmail[buscaID]);
    printf("O sexo do usuario: %s\n", printSexo[buscaID]);
    printf("O endereco do usuario: %s\n", printEndereco[buscaID]);
    printf("O altura do usuario: %lf\n", printAltura[buscaID]);

    if (printVacina[buscaID] == true){
        printf("O usuario tomou a vacina\n");
    }

    else{
        printf("O usuario nao tomou a vacina\n");
    }

    printf("\n__________________________________________________\n");
    system("pause");
}

void backupUser(int backupOption, int *id, char *nome[][100], char *email[][100], char *sexo[][100], char *endereco[][100], double *altura, bool *vacina){//Salvar os dados do usuário num backup
    int backId, backIdade;
    bool backVacina;
    double backAltura;
    char backNome[], backEmail[][1000], backSexo[][100], backEndereco[][100];

    if (backupOption == 1){
        for (int i = 0; i < quantUser; i++){
            backupId[i] = id[i];
            strcpy(backupNome[i], nome[i]);
            strcpy(backupEmail[i], email[i]);
            strcpy(backupSexo[i], sexo[i]);
            strcpy(backupEndereco[i], endereco[i]);
            backupAltura[i] = altura[i];
            backupVacina[i] = vacina[i];
        }
        backupUserNumber = quantUser;
    }
    else if (backupOption == 2){
        for (int i = 0; i < quantUser; i++){
            id[i] = backupId[i];
            strcpy(nome[i], backupNome[i]);
            strcpy(email[i], backupEmail[i]);
            strcpy(sexo[i], backupSexo[i]);
            strcpy(endereco[i], backupEndereco[i]);
            altura[i] = backupAltura[i];
            vacina[i] = backupVacina[i];
        }
        quantUser = backQuantUser;
    }
}

void encerra(){//Encerra e se despede
    printf("Agradecemos pela preferencia\n--A lista final de usuarios--");
    //printUser();
    
}

int buscaID(){
    int escolhaID;
    int escolha = 0;

    do{
        printf("Qual o ID do usuario? ");
        scanf("%d", &escolhaID);

        for (int i = 0; i < quantUser; i++){
            if (buscaID[i] == escolhaID){
                printUser(buscaID, printId, printNome[], printEmail[][1000], printSexo[][100], printEndereco[][100], printAltura, printVacina, printIdade);
                return i;
            }
        }

        do{
            printf("ID invalido!");
            printf("Tentar novamente? 1-sim 2-nao:");
            scanf("%d", &escolha);
        } while (escolha < 1 || escolha > 2);
    } while (escolha == 1);
}

int buscaEmail(){
    int escolha
    char escolhaEmail[100];

    do{
        printf("Digite o email do usuario: ");
        fflush(stdin);
        fgets(escolhaEmail, 100, stdin);
        for (int i = 0; i < quantUSer; i++){
            if (stricmp(escolhaEmail, procEmail[i]) == 0){
                printUser(buscaID, printId, printNome[], printEmail[][1000], printSexo[][100], printEndereco[][100], printAltura, printVacina, printIdade);
                return i;
            }
        }
        do{
            printf("email invalido!");
            printf("Deseja tenta novamente(1-sim 2-nao):");
            scanf("%d", &escolha);
        } while (escolha < 1 || escolha > 2);
    } while (escolha == 1);
}
//Término das criações das funções


